services:
  db:
    image: postgis/postgis:16-3.4
    container_name: shrine_db
    restart: unless-stopped
    env_file:
      - .env.dev
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - ./.docker/db/data:/var/lib/postgresql/data
      - ./.docker/db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-admin} -d ${POSTGRES_DB:-jinja_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:8.13
    container_name: shrine_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com   # ログイン用メール
      PGADMIN_DEFAULT_PASSWORD: admin_pass       # ログイン用パスワード
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - ./.docker/pgadmin/data:/var/lib/pgadmin

  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: shrine_web
    restart: unless-stopped
    env_file:
      - .env.dev
    environment:
      DJANGO_DB_NAME: ${DJANGO_DB_NAME}
      DJANGO_DB_USER: ${DJANGO_DB_USER}
      DJANGO_DB_PASSWORD: ${DJANGO_DB_PASSWORD}
      DJANGO_DB_HOST: ${DJANGO_DB_HOST}
      DJANGO_DB_PORT: ${DJANGO_DB_PORT}

      # ← GDAL/GEOS/PROJ は「空」で上書き → つまり未設定になる
      GDAL_LIBRARY_PATH:
      GEOS_LIBRARY_PATH:
      GDAL_DATA:
      PROJ_LIB:
    depends_on:
      - db
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"




  frontend:
    build:
      context: ./frontend
      dockerfile: ../Dockerfile.frontend
    container_name: shrine_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    depends_on:
      - web