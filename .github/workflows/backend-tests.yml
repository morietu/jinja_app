name: backend-tests

on:
  pull_request:
  push:
    branches: [ develop, main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgis/postgis:16-3.4
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: jdb50515
          POSTGRES_DB: jinja_test
        ports:
          - "5432:5432"
        options: >-
          --health-cmd="pg_isready -U admin -d jinja_test"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    env:
      USE_GIS: "1"
      DISABLE_GIS_FOR_TESTS: "0"
      ENV: "TEST"
      IS_PYTEST: "1"
      ROUTE_PROVIDER: "dummy"
      DISABLE_THROTTLE: "1"
      DATABASE_URL: postgis://admin:jdb50515@localhost:5432/jinja_test
      GOOGLE_PLACES_API_KEY: "dummy"
      GOOGLE_MAPS_API_KEY: "dummy"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install system deps (GDAL/GEOS + pg client)
        run: |
          sudo apt-get update
          sudo apt-get install -y gdal-bin libgdal-dev libgeos-dev postgresql-client

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements*.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements-dev.txt

      - name: Ensure drf-spectacular (probe)
        run: |
          python - <<'PY'
          import pkgutil, sys
          sys.exit(0 if pkgutil.find_loader("drf_spectacular") else 1)
          PY
        continue-on-error: true

      - name: Fallback install drf-spectacular
        if: failure()
        run: pip install drf-spectacular

      - name: Wait for DB
        run: |
          for i in {1..60}; do
            pg_isready -h localhost -p 5432 -U admin -d jinja_test && break
            echo "waiting for Postgres... ($i/60)"
            sleep 2
          done
          pg_isready -h localhost -p 5432 -U admin -d jinja_test

      - name: Run tests via Makefile (repo root)
        working-directory: .
        run: make test
        env:
          GOOGLE_PLACES_API_KEY: dummy
          GOOGLE_MAPS_API_KEY: dummy
          PYTEST_ADDOPTS: >-
            --cov=backend
            --cov-report=xml
            --cov-report=html
            --cov-report=term-missing:skip-covered
            --cov-fail-under=65

      - name: Upload coverage XML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
          if-no-files-found: warn
          retention-days: 7

      - name: Upload coverage HTML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: htmlcov
          if-no-files-found: warn
          retention-days: 7
