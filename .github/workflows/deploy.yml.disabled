name: Deploy
on:
  push:
    branches: [develop, main]
  workflow_dispatch:
    inputs:
      env:
        description: "staging or prod"
        required: false
        default: "staging"

jobs:
  deploy:
    runs-on: ubuntu-latest

    # develop など main 以外のブランチから env=prod なら実行しない
    if: |
      !(
        github.event_name == 'workflow_dispatch' &&
        inputs.env == 'prod' &&
        github.ref_name != 'main'
      )

    concurrency:
      group: deploy-${{ github.ref_name }}
      cancel-in-progress: false

    permissions:
      contents: read
      deployments: write

    steps:
      - uses: actions/checkout@v4

      # dispatch 時は入力優先、push 時はブランチから自動判定
      - name: Decide env
        id: env
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "ENV=${{ inputs.env }}" >> "$GITHUB_OUTPUT"
          else
            [[ "${{ github.ref_name }}" == "main" ]] && echo "ENV=prod" >> "$GITHUB_OUTPUT" || echo "ENV=staging" >> "$GITHUB_OUTPUT"
          fi

      # Environment を決定（prod=production / それ以外=staging）
      - name: Set environment name
        id: envname
        run: |
          if [[ "${{ steps.env.outputs.ENV }}" == "prod" ]]; then
            echo "ENV_NAME=production" >> "$GITHUB_OUTPUT"
          else
            echo "ENV_NAME=staging" >> "$GITHUB_OUTPUT"
          fi

      - name: Announce environment
        run: echo "Deploying to ${{ steps.envname.outputs.ENV_NAME }} (env=${{ steps.env.outputs.ENV }})"

      - name: Deploy
        env:
          GITHUB_ENVIRONMENT: ${{ steps.envname.outputs.ENV_NAME }}
        run: ./scripts/deploy.sh "${{ steps.env.outputs.ENV }}"
        # ↑ Environments タブの保護ルールを使いたい場合は、環境名を
        # 環境プロパティとして job に付ける必要があるため、別案:
        # （GitHub Actions の仕様上、動的 environment は job レベルで指定）
