# Generated by Django 5.2.5 on 2025-09-27 22:17

from django.contrib.gis.db.models.fields import PointField
from django.contrib.postgres.indexes import GinIndex
from django.core.validators import MaxValueValidator, MinValueValidator
from django.db import migrations, models
from django.db.models import CheckConstraint, Q


class Migration(migrations.Migration):

    dependencies = [
        ("temples", "0031_shrine_location_placeref_placeref_snapshot_gin_and_more"),
    ]

    operations = [
        # ★ DBを触らず、状態だけに location を追加（列は既に存在する前提）
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.AddField(
                    model_name="shrine",
                    name="location",
                    field=PointField(srid=4326, null=True, blank=True),
                ),
            ],
            database_operations=[],
        ),
        # latitude / longitude の NULL 許可＋バリデータ（必要なら）
        migrations.AlterField(
            model_name="shrine",
            name="latitude",
            field=models.FloatField(
                null=True,
                blank=True,
                validators=[MinValueValidator(-90.0), MaxValueValidator(90.0)],
            ),
        ),
        migrations.AlterField(
            model_name="shrine",
            name="longitude",
            field=models.FloatField(
                null=True,
                blank=True,
                validators=[MinValueValidator(-180.0), MaxValueValidator(180.0)],
            ),
        ),
        # 位置の整合性チェック（どちらもNULL or どちらもNOT NULL）
        migrations.AddConstraint(
            model_name="shrine",
            constraint=CheckConstraint(
                name="chk_lat_lng_both_or_none",
                check=(
                    Q(latitude__isnull=True, longitude__isnull=True)
                    | Q(latitude__isnull=False, longitude__isnull=False)
                ),
            ),
        ),
        # 緯度経度の範囲チェック
        migrations.AddConstraint(
            model_name="shrine",
            constraint=CheckConstraint(
                name="chk_lat_range",
                check=Q(latitude__gte=-90.0, latitude__lte=90.0),
            ),
        ),
        migrations.AddConstraint(
            model_name="shrine",
            constraint=CheckConstraint(
                name="chk_lng_range",
                check=Q(longitude__gte=-180.0, longitude__lte=180.0),
            ),
        ),
        # 既に DB にある GIN index は「状態だけ」追加して整合させる
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.AddIndex(
                    model_name="placeref",
                    index=GinIndex(fields=["snapshot_json"], name="placeref_snapshot_gin"),
                ),
            ],
            database_operations=[],
        ),
    ]
