# Generated by Django 5.x on 2025-09-08
from django.db import migrations, models


def backfill_location_from_latlng(apps, schema_editor):
    """
    既存データで location が未設定の場合、latitude/longitude から生成して補完する。
    SRID=4326（WGS84）
    """
    Shrine = apps.get_model("temples", "Shrine")
    from django.contrib.gis.geos import Point

    updated = 0
    for s in Shrine.objects.all():
        # 両方の値があり、location が空なら補完
        if s.latitude is not None and s.longitude is not None and not s.location:
            try:
                s.location = Point(float(s.longitude), float(s.latitude), srid=4326)
                s.save(update_fields=["location"])
                updated += 1
            except Exception:
                # 値が不正な場合はスキップ
                pass
    # ログは不要（migrate出力を汚さないため）

class Migration(migrations.Migration):

    dependencies = [
        ("temples", "0004_previous_migration"),  # ← 直前の番号に合わせて調整
    ]

    operations = [
        migrations.AddField(
            model_name="shrine",
            name="views_30d",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="shrine",
            name="favorites_30d",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="shrine",
            name="popular_score",
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name="shrine",
            name="last_popular_calc_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        
        migrations.AddIndex(
            model_name="shrine",
            index=models.Index(fields=["popular_score"], name="shrine_popular_idx"),
        ),
        migrations.RunPython(backfill_location_from_latlng, migrations.RunPython.noop),
    ]
